<?xml version="1.0" encoding="UTF-8"?>
<atwd1 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.cems.uwe.ac.uk/~p-chatterjee/2018-19/modules/atwd1/assignment/atwd1_schema.xsd" code="UFCFX3-15-3" name="Advanced Topics in Web Development" year="2018/19">
    <student sno="16036844" un="g45-jones" surname="Jones" prog="BSc (Hons) Computing"/>
    <assignment>
        <component id="A" name="Application">
            <tests>
                <!--
 
                 Note that you should only need to edit the '~a-student' value 
                 to your own username to make these tests work for your application.
                
-->
                <!--  convert 100.00 GBP to INR and return XML  -->
                <test id="1" response="xml" type="sucess">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/?from=GBP&to=INR&amnt=100.00&format=xml
                </test>
                <!--  convert 85.75 from USD to EUR and return JSON  -->
                <test id="2" response="json" type="sucess">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/?from=USD&to=EUR&amnt=85.75.00&format=json
                </test>
                <!--
 redo test 1 but leave out 'format' parameter - should return XML by default 
-->
                <test id="3" response="xml" type="sucess">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/?from=GBP&to=INR&amnt=100.00
                </test>
                <!--
 error 1000: Required parameter is missing - the 'from' parameter is missing 
-->
                <test id="4" response="xml" type="error 1000">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/?to=EUR&amnt=100.00&format=xml
                </test>
                <!--
 error 1100: Parameter not recognized - the 'to' parameter is missing the 'o' (return json) 
-->
                <test id="5" response="json" type="error 1100">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/?from=USD&t=EUR&amnt=100.00&format=json
                </test>
                <!--
 error 1200: Currency type not recognised - the 'from' value is 'YYY') 
-->
                <test id="6" response="json" type="error 1200">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/?from=YYY&to=EUR&amnt=18.85&format=xml
                </test>
                <!--
 error 1300: Currency amount must be a decimal number - the 'amnt' value is non-decimal) 
-->
                <test id="7" response="xml" type="error 1300">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/?from=USD&to=EUR&amnt=NaN&format=xml
                </test>
                <!--
 error 1400: Format must be xml or json - the 'format' value is 'ZZZ') 
-->
                <test id="8" response="xml" type="error 1400">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/?from=USD&to=EUR&amnt=19.20&format=ZZZ
                </test>
            </tests>
            <data>
                <rates_file>
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/curData.xml
                </rates_file>
            </data>
            <code>
                <file type="main">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/index.phps
                </file>
                <!--  You can add uo to 7 addtional url's here  -->
                <file type="client">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/client/client.html
                </file>
                <file type="config">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/config.phps
                </file>
                <file type="errorHandling">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/generateError.phps
                <file type="externalAPI">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/curDataMonitor.phps
                </file>
                <file type="GET">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/currGet.phps
                </file>
            </code>
            <comment>This was easy-peasy. Did it in my sleep.</comment>
        </component>
        <component id="B" name="Post, Put & Delete implementation">
            <code>
                <file type="POST">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/currPost.phps
                </file>
                <file type="PUT">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/currPut.phps
                </file>
                <file type="DEL">
                    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/currDelete.phps
                </file>
            </code>
            <!--  interface form  -->
            <form>
                http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/client/client.html
            </form>
            <comment>
                A responsive form and easy code - again far too easy. Blimey, is this first year stuff?
            </comment>
        </component>
        <component id="C" name="Critical Evaluation">
            <eval>
                <![CDATA[
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>ATWD1 assignment Critical Evaulation</title>
</head>
<body>
    <p>
        Critical Evaluation for ATWD1 assignment for Gregory Jones 16036844
    </p><br/>
    <p>
        <h2>Learning Outcomes</h2>
        In this assignment I felt I learnt about REST api practices and standards, rather than PHP which was covered last year in DSAA. However for this assignment I do believe I explored further into PHP than last year. Using the manual for PHP to better locate functions for tasks I would have previously done by hand, such as isset or array_key_exists. With regards to the REST API once I had gotten the basics I think most of my learning outcomes related to writing the client javascript AJAX querys then handling them in PHP, such as using the php file stream. For broader REST knowledge I found that the research I needed to do at the start of this assignment was when I learnt most about this, but in the end the source I used most was more practical and did not have much infomation on what the tasks meant or why. 
    </p>
    <p>
        <h2>Crtical Evaluation of Assignment</h2>
        In hind sight I would change how I doing several large parts of the assignment, since I feel I relied on if statements too much for basic tasks would could have been rolled into a function which could have been reused. However I did start to move away from using nested foreach loops for simple tasks which could be done by oneline functions included with php. The main example of this is with the find node function which orignally used a foreach solution to find the matching node but I changed this successfully to use x-path. I could have used the same method in several other locations in my script, such as in currPut to validate the currency vs the RESTcountries api data, this would have eliminated one of the loops making the code more efficient.
    </p>
</body>
</html>
]]>
            </eval>
        </component>
    </assignment>
</atwd1>
<!--  ATWD1 assignment XML submission File, 2018  -->
<!--  author: prakash.chatterjee@uwe.ac.uk  -->
