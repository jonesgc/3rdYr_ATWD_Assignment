surname: Jones
number: 16036844
username: g45-jones

base currency = USD (rates are shown are vs USD) 

app_home:       http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/
update_form:    http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/client/client.html


#source code files
index:      http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/index.phps
config:     http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/config.phps
error:      http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/generateError.phps
curApi:     http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/curDataMonitor.phps
GET:        http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/currGet.phps
POST:       http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/currPost.phps
PUT:        http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/currPut.phps
DEL:        http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/docs/currDelete.phps


#datafiles
rates_xml:  http://isa.cems.uwe.ac.uk/~g45-jones/atwd1/assignment/curData.xml

#Critical Evaluation

Assignment overview:
The breif for this assignment was to create a RESTful api for currency conversion with CRUD operations. I have undertaken all elements of the assignment and attempted implement some advanced features, such as being able to handle POST input without the URL encoded header being sent with the request.

REST vs SOAP:
The main difference between REST and SOAP is the method of accessing the resource they are the interface for. In the case of REST HTTP is used to access data. In contrast soap is used to access parts of application logic, this is done by different communication methods such as HTTP or SMTP. SOAP relies on the associated WSDL file to describe the methods of referencing the service. 

Another large difference between REST and SOAP is the type of data retrieved. REST can retrieve any type of data, such as a xml or mp3 file. In contrast SOAP solely uses XML. This limiting factor could be one of the causes for REST's rise to popularity. When contrasting the two protocols it is important to examine the use-cases of each, since this explains why SOAP is still used despite the abilities of REST. Since with SOAP you have a larger record of communication between the SOAP service and you, this is desirable for certain applications, such as finical institutions. This does however come at the cost of performance.

Possible improvements to application:
In hind sight I would change how I doing several parts of the assignment, since I feel I relied on if statements too much for basic tasks would could have been rolled into a function which could have been reused. However I did start to move away from using nested foreach loops for simple tasks which could be done by oneline functions included with php. The main example of this is with the find node function which orignally used a foreach solution to find the matching node but I changed this successfully to use x-path. I could have used the same method in several other locations in my script, such as in currPut to validate the currency vs the RESTcountries api data, this would have eliminated one of the loops making the code more efficient.

However for functional improvements I am unsure of what else could be added to the assignment, since the task was to create an API and my submission forfils that criteria. In part two of the assignment, the creation of the POST, PUT and DELETE functions, my error handling is quite basic. The creation of a test framwork and stringent tests for these functions would improve the quality of these functions from a use point of view.